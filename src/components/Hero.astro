---
import Button from "./ui/Button.astro";

export interface Props {
  item: {
    badge?: string;
    title?: string;
    titleHighlight?: string;
    description?: string;
    buttons?: Array<{
      text: string;
      href?: string;
    }>;
    image?: string;
    imageAlt?: string;
  };
}

const { item } = Astro.props;
const { badge, title, titleHighlight, description, buttons, image, imageAlt } =
  item;
---

<section
  class="relative bg-gradient-to-br from-purple-50 to-indigo-100 py-20 lg:py-32"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <div>
        {
          badge && (
            <span class="mb-4 bg-purple-100 text-purple-800 hover:bg-purple-100 inline-block px-3 py-1 rounded-full text-sm font-medium">
              {badge}
            </span>
          )
        }
        <h1 class="text-4xl lg:text-6xl font-bold text-gray-900 mb-6">
          {title}
          {
            titleHighlight && (
              <span class="text-purple-600">{titleHighlight}</span>
            )
          }
        </h1>
        {
          description && (
            <p class="text-xl text-gray-600 mb-8 leading-relaxed">
              {description}
            </p>
          )
        }
        <div class="flex flex-col sm:flex-row gap-4">
          {
            buttons?.map((button, index) => (
              <Button
                href={button.href}
                variant={index === 0 ? "primary" : "white"}
              >
                {button.text}
              </Button>
            ))
          }
        </div>
      </div>
      <div class="relative">
        {
          image && (
            <div class="aspect-[4/3] bg-white rounded-3xl p-4 shadow-2xl overflow-hidden">
              <img
                src={image}
                alt={imageAlt || "Hero image"}
                class="w-full h-full object-cover rounded-2xl"
              />
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
