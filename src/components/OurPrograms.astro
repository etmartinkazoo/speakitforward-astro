---
import { getAssetURL } from "@utils/getImage";

export interface Props {
  item: {
    title?: string;
    description?: string;
    cards?: Array<{
      our_program_card_id: {
        image: string;
        title: string;
        description: string;
        list?: Array<{
          title: string;
        }>;
      };
    }>;
  };
}

const { item } = Astro.props;
const { title, description, cards } = item;

// Helper function to get color classes
const getColorClasses = (index: number) => {
  const colors = [
    {
      gradient: "from-purple-600 to-purple-800",
      bg: "from-purple-600/20",
      text: "text-purple-600",
    },
    {
      gradient: "from-indigo-600 to-indigo-800",
      bg: "from-indigo-600/20",
      text: "text-indigo-600",
    },
    {
      gradient: "from-pink-600 to-pink-800",
      bg: "from-pink-600/20",
      text: "text-pink-600",
    },
    {
      gradient: "from-green-600 to-green-800",
      bg: "from-green-600/20",
      text: "text-green-600",
    },
  ];
  return colors[index % colors.length];
};
---

<section
  id="programs"
  class="py-20 bg-gradient-to-br from-gray-50 to-purple-50"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2
        class="text-3xl lg:text-4xl font-bold bg-gradient-to-r from-purple-600 to-indigo-600 bg-clip-text text-transparent mb-4"
      >
        {title}
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        {description}
      </p>
    </div>

    <div class="grid lg:grid-cols-2 gap-8">
      {
        cards?.map((card, index) => {
          const colorClasses = getColorClasses(index);
          return (
            <div class="border-0 shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group bg-white rounded-lg">
              <div class="relative h-48 overflow-hidden">
                <img
                  src={getAssetURL(card.our_program_card_id.image)}
                  alt={card.our_program_card_id.title}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
                <div
                  class={`absolute inset-0 bg-gradient-to-t ${colorClasses.bg} to-transparent`}
                />
              </div>
              <div class="p-6">
                <h3
                  class={`text-2xl font-bold bg-gradient-to-r ${colorClasses.gradient} bg-clip-text text-transparent mb-3`}
                >
                  {card.our_program_card_id.title}
                </h3>
                <p class="text-lg text-gray-600 mb-4">
                  {card.our_program_card_id.description}
                </p>
                {card.our_program_card_id.list && (
                  <ul class="space-y-2 text-gray-600">
                    {card.our_program_card_id.list.map((item) => (
                      <li class="flex items-center">
                        <svg
                          class={`w-4 h-4 ${colorClasses.text} mr-2 flex-shrink-0`}
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5l7 7-7 7"
                          />
                        </svg>
                        {item.title}
                      </li>
                    ))}
                  </ul>
                )}
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
